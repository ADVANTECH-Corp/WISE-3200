--- a/drivers/net/wireless/ath/ath.h
+++ b/drivers/net/wireless/ath/ath.h
@@ -173,6 +173,8 @@ struct ath_common {
 	spinlock_t cc_lock;
 	struct ath_cycle_counters cc_ani;
 	struct ath_cycle_counters cc_survey;
+	u32 last_cc_rx_busy;
+	u32 last_cc_cycles;
 
 	struct ath_regulatory regulatory;
 	struct ath_regulatory reg_world_copy;
--- a/drivers/net/wireless/ath/ath9k/debug.c
+++ b/drivers/net/wireless/ath/ath9k/debug.c
@@ -1246,6 +1246,35 @@ static const struct file_operations fops_tpc = {
 	.llseek = default_llseek,
 };
 
+static ssize_t read_file_chutil(struct file *file, char __user *user_buf,
+				size_t count, loff_t *ppos)
+{
+	struct ath_softc *sc = file->private_data;
+	struct ath_common *common = ath9k_hw_common(sc->sc_ah);
+	u32 len = 0, size, util;
+	char buf[64];
+	size_t retval;
+
+	if (!common->last_cc_cycles )
+		util = 0;
+	else
+		util = common->last_cc_rx_busy * 100 / common->last_cc_cycles;
+
+	size = sizeof(buf);
+	len += scnprintf(buf + len, size - len, "%d\n", util);
+
+	retval = simple_read_from_buffer(user_buf, count, ppos, buf, len);
+
+	return retval;
+}
+
+static const struct file_operations fops_chutil = {
+	.read = read_file_chutil,
+	.open = simple_open,
+	.owner = THIS_MODULE,
+	.llseek = default_llseek,
+};
+
 /* Ethtool support for get-stats */
 
 #define AMKSTR(nm) #nm "_BE", #nm "_BK", #nm "_VI", #nm "_VO"
@@ -1457,6 +1486,8 @@ int ath9k_init_debug(struct ath_hw *ah)
 #endif
 	debugfs_create_file("tpc", S_IRUSR | S_IWUSR,
 			    sc->debug.debugfs_phy, sc, &fops_tpc);
+	debugfs_create_file("chutil", S_IRUSR | S_IWUSR,
+			    sc->debug.debugfs_phy, sc, &fops_chutil);
 
 	return 0;
 }
--- a/drivers/net/wireless/ath/ath9k/link.c
+++ b/drivers/net/wireless/ath/ath9k/link.c
@@ -529,8 +529,11 @@ int ath_update_survey_stats(struct ath_softc *sc)
 	if (cc->cycles < div)
 		return -1;
 
-	if (cc->cycles > 0)
+	if (cc->cycles > 0) {
+		common->last_cc_rx_busy = cc->rx_busy;
+		common->last_cc_cycles = cc->cycles;
 		ret = cc->rx_busy * 100 / cc->cycles;
+	}
 
 	memset(cc, 0, sizeof(*cc));
 
