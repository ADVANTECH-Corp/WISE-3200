diff --git a/p2p.c b/p2p.c
index 83a86b3..fc6cbe4 100644
--- a/p2p.c
+++ b/p2p.c
@@ -145,6 +145,52 @@ static void stop_dhcp(struct sigma_dut *dut, const char *group_ifname, int go)
 }
 
 
+static void cross_connect_enable(struct sigma_dut *dut,
+				 const char *p2p_group_ifname,
+				 const char *uplink_ifname)
+{
+	char buf[200];
+
+	snprintf(buf, sizeof(buf), "iptables -P FORWARD DROP");
+	run_system(dut, buf);
+
+	snprintf(buf, sizeof(buf), "iptables -t nat -A POSTROUTING -o %s -j MASQUERADE", uplink_ifname);
+	run_system(dut, buf);
+
+	snprintf(buf, sizeof(buf), "iptables -A FORWARD -i %s -o %s -m state --state RELATED,ESTABLISHED -j ACCEPT",
+		 uplink_ifname, p2p_group_ifname);
+	run_system(dut, buf);
+
+	snprintf(buf, sizeof(buf), "iptables -A FORWARD -i %s -o %s -j ACCEPT",
+		 p2p_group_ifname, uplink_ifname);
+	run_system(dut, buf);
+
+	snprintf(buf, sizeof(buf), "echo 1 > /proc/sys/net/ipv4/ip_forward");
+	run_system(dut, buf);
+}
+
+static void cross_connect_disable(struct sigma_dut *dut,
+				  const char *p2p_group_ifname,
+				  const char *uplink_ifname)
+{
+	char buf[200];
+
+	snprintf(buf, sizeof(buf), "echo 0 > /proc/sys/net/ipv4/ip_forward");
+	run_system(dut, buf);
+
+	snprintf(buf, sizeof(buf), "iptables -t nat -D POSTROUTING -o %s -j MASQUERADE", uplink_ifname);
+	run_system(dut, buf);
+
+	snprintf(buf, sizeof(buf), "iptables -D FORWARD -i %s -o %s -m state --state RELATED,ESTABLISHED -j ACCEPT",
+		 uplink_ifname, p2p_group_ifname);
+	run_system(dut, buf);
+
+	snprintf(buf, sizeof(buf), "iptables -D FORWARD -i %s -o %s -j ACCEPT",
+		 p2p_group_ifname, uplink_ifname);
+	run_system(dut, buf);
+}
+
+
 static int stop_event_rx = 0;
 
 #ifdef __linux__
@@ -167,10 +213,13 @@ static void * wpa_event_recv(void *ptr)
 	fd_set rfd;
 	struct timeval tv;
 	size_t len;
+	char *uplink_ifname = NULL;
 
 	const char *events[] = {
 		"P2P-GROUP-STARTED",
 		"P2P-GROUP-REMOVED",
+		"P2P-CROSS-CONNECT-ENABLE",
+		"P2P-CROSS-CONNECT-DISABLE",
 		NULL
 	};
 
@@ -210,12 +259,16 @@ static void * wpa_event_recv(void *ptr)
 		}
 
 		len = sizeof(buf);
+		memset(buf, 0, len);
 		if (wpa_ctrl_recv(ctrl, buf, &len) < 0) {
 			sigma_dut_print(dut, DUT_MSG_ERROR,
 					"Failure while waiting for events");
 			continue;
 		}
 
+		if (len > 0 && len < sizeof buf)
+			buf[len] = '\0';
+
 		ret = 0;
 		pos = strchr(buf, '>');
 		if (pos) {
@@ -230,7 +283,7 @@ static void * wpa_event_recv(void *ptr)
 		if (!ret)
 			continue;
 
-		if (strstr(buf, "P2P-GROUP-")) {
+		if (strstr(buf, "P2P-GROUP-") || strstr(buf, "P2P-CROSS-")) {
 			sigma_dut_print(dut, DUT_MSG_DEBUG, "Group event '%s'",
 					buf);
 			p2p_group_ifname = strchr(buf, ' ');
@@ -241,13 +294,17 @@ static void * wpa_event_recv(void *ptr)
 			if (!pos)
 				continue;
 			*pos++ = '\0';
-			gtype = pos;
-			pos = strchr(gtype, ' ');
-			if (!pos)
-				continue;
-			*pos++ = '\0';
 
-			go = strcmp(gtype, "GO") == 0;
+			if (strstr(buf, "P2P-GROUP-")) {
+				gtype = pos;
+				pos = strchr(gtype, ' ');
+				if (!pos)
+					continue;
+				*pos++ = '\0';
+
+				go = strcmp(gtype, "GO") == 0;
+			} else
+				uplink_ifname = pos;
 		}
 
 		if (strstr(buf, "P2P-GROUP-STARTED")) {
@@ -255,6 +312,10 @@ static void * wpa_event_recv(void *ptr)
 		} else if (strstr(buf, "P2P-GROUP-REMOVED")) {
 			stop_dhcp(dut, p2p_group_ifname, go);
 			go = 0;
+		} else if (strstr(buf, "P2P-CROSS-CONNECT-ENABLE")) {
+			cross_connect_enable(dut, p2p_group_ifname, uplink_ifname);
+		} else if (strstr(buf, "P2P-CROSS-CONNECT-DISABLE")) {
+			cross_connect_disable(dut, p2p_group_ifname, uplink_ifname);
 		}
 	}
 
